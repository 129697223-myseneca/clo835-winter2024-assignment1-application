name: Build and push image to AWS ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "master" branch
  push:
    branches: [ "master" ]

jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: us-east-1

      - name: Run a multi-line script
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: clo835-assignment1
          MYSQL_DOCKERFILE: Dockerfile_mysql
          MYSQL_IMAGE: assign1-mysql
          WEBAPP_DOCKERFILE: Dockerfile
          WEBAPP_IMAGE: assign1-webapp
          
        run: |
          # Docker build command for Mysql
          docker build -f $MYSQL_DOCKERFILE -t $ECR_REGISTRY/$ECR_REPOSITORY:$MYSQL_IMAGE .
          # Unit test for Mysql
          docker run -d -e MYSQL_ROOT_PASSWORD=password123 $ECR_REGISTRY/$ECR_REPOSITORY:$MYSQL_IMAGE
          docker ps
          echo "Pause for 10 seconds to let container start"
          sleep 10
          # Push image to AWS ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$MYSQL_IMAGE
          
          # Docker build command for Webapp
          docker build -f $WEBAPP_DOCKERFILE -t $ECR_REGISTRY/$ECR_REPOSITORY:$WEBAPP_IMAGE .
          # Unit test for Webapp
          docker run -p 8080:8080 -e DBHOST=localhost -e DBPORT=3306 -e DBUSER=root  -e DBPWD=password123 -e APP_COLOR=blue -d $ECR_REGISTRY/$ECR_REPOSITORY:$WEBAPP_IMAGE
          docker ps
          echo "Pause for 10 seconds to let container start"
          sleep 10
          curl localhost:8080 -vvv
          # Push image to AWS ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$MYSQL_IMAGE
